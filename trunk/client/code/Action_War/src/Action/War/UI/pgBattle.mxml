<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   implements="Action.Core.Page.IGamePage,Action.Display.Drawing.ICanvasContainer"
				   xmlns:mx="library://ns.adobe.com/flex/mx" width="760" height="600" backgroundColor="#000000">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import Action.Core.Flow.Workflow;
			import Action.Core.GamePlugins;
			import Action.Display.Decorator.CommonDisplayDecorator;
			import Action.Display.Decorator.DisplayDecoratorBuilder;
			import Action.Display.Decorator.IDisplayDecorator;
			import Action.Display.Drawing.BitmapHelper;
			import Action.Display.Drawing.CanvasGraphics;
			import Action.Model.BattleReport;
			import Action.Model.BattleUnit;
			import Action.Resource.Flow.LoadImageActivity;
			import Action.Resource.ResourceManager;
			import Action.War.Report.BattleReportManager;
			import Action.War.Resource.BattleUnitResource;
			import Action.War.WarModule;
			
			import Util.NumberWrapper;
			
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.core.IVisualElement;
			
			private var _canvasGraphics:CanvasGraphics;
						
			public function onLoad():void
			{
				//加载背景
				_bcMain.setStyle("backgroundImage", ResourceManager.imageSection.get(WarModule.BgUrl));
				
				//生成网格
				for(var i:int = 0; i<5; i++)
				{
					for(var j:int = 0; j<14; j++)
					{
						var cell:BorderContainer = new BorderContainer();
						cell.setStyle("borderWeight", 1);
						cell.setStyle("backgroundAlpha", 0.3);
						cell.setStyle("backgroundColor", "#000044");
						cell.setStyle("borderColor", "#00ffff");
						cell.width = cell.height = 50;
						cell.x = j * 50;
						cell.y = i * 50;						
						_bcGrid.addElement(cell);
						
						var lbl:Label = new Label();
						lbl.x = 20;
						lbl.y = 20;
						lbl.setStyle("color", "#ffff00");
						lbl.text = (j * 5 + i).toString();
						cell.addElement(lbl);
					}
				}
				
				//装饰控件
				var decorator1:CommonDisplayDecorator = new CommonDisplayDecorator();
				decorator1.color = "#ffff00";
				var decorator2:CommonDisplayDecorator = new CommonDisplayDecorator();
				decorator2.color = "#ff8800";
				DisplayDecoratorBuilder.create([_lblGrid, _lblPlay])
					.appendDecorator(MouseEvent.MOUSE_OVER, decorator1)
					.appendDecorator(MouseEvent.MOUSE_OUT, decorator2)
					.build();
				
				//test				
				//test3();
			}
			
			public var battleReportManager:BattleReportManager;
			
			public function onUnload():void
			{
				
			}
			
			public function getCanvas():BorderContainer
			{
				return _bcCanvas;
			}
			
			public function bindGraphics(graphics:CanvasGraphics):void
			{
				_canvasGraphics = graphics;
			}
			
			protected function _lblGrid_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				_lblGrid.text = (_bcGrid.visible = !_bcGrid.visible) ? "隐藏网格" : "显示网格";
			}
			
			protected function _lblPlay_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				_canvasGraphics.clear();
				GamePlugins.console.clear();
				battleReportManager.play(_canvasGraphics);
			}			
			
			private function test():void
			{
				var resMgr:BattleUnitResource = BattleUnitResource.getInstance(1);
				for(var i:int=0; i<12; i++)
				{
					var img:Image = new Image();
					img.x = 42 + i * 50;
					img.y = -8;
					img.source = resMgr.attackBitmaps[i];
					_bcCanvas.addElement(img);
				}
				for(i=0; i<4; i++)
				{
					img = new Image();
					img.x = 42 + i * 50;
					img.y = 42;
					img.source = resMgr.attackBitmaps[i+12];
					_bcCanvas.addElement(img);
				}
				for(i=0; i<4; i++)
				{
					img = new Image();
					img.x = 50 + i * 50;
					img.y = 100;
					img.source = resMgr.defendBitmaps[i];
					_bcCanvas.addElement(img);
				}
				for(i=0; i<8; i++)
				{
					img = new Image();
					img.x = 50 + i * 50;
					img.y = 150;
					img.source = resMgr.moveBitmaps[i];
					_bcCanvas.addElement(img);
				}
				for(i=0; i<4; i++)
				{
					img = new Image();
					img.x = 50 + i * 50;
					img.y = 200;
					img.source = resMgr.waitBitmaps[i];
					_bcCanvas.addElement(img);
				}
				for(i=0; i<4; i++)
				{
					img = new Image();
					img.x = 450 + i * 50;
					img.y = 200;
					img.source = resMgr.hurtBitmaps[i];
					_bcCanvas.addElement(img);
				}
			}
			
			private var _imgTest:Image;
			private var _idxTest:int;
			
			private function test2():void
			{
				_imgTest = new Image();
				_bcCanvas.addElement(_imgTest);
				_imgTest.source = BattleUnitResource.getInstance(1).moveBitmaps[0];
				var timer:Timer = new Timer(1000);
				timer.addEventListener(TimerEvent.TIMER, onTick);
				timer.start();
			}
			
			private function test3():void
			{
				var bmp:Bitmap  = BattleUnitResource.getInstance(1).moveBitmaps[0];
				_bcCanvas.graphics.moveTo(25,0);
				_bcCanvas.graphics.beginBitmapFill(bmp.bitmapData, new Matrix(1,0,0,1,25), false, false);
				//_canvas.graphics.beginFill(0x00ff00);
				_bcCanvas.graphics.lineStyle(3, 0xffff00);
				_bcCanvas.graphics.drawRect(25,0, 48,48);
				_bcCanvas.graphics.endFill();
			}
			
			private function onTick(e:TimerEvent):void
			{
				var idx:int = _idxTest % 8;
				_bcCanvas.removeElement(_imgTest);
				_imgTest = new Image();
				_bcCanvas.addElement(_imgTest);
				_imgTest.source = BattleUnitResource.getInstance(1).moveBitmaps[idx];
				_imgTest.move(50 * idx, 50);
				GamePlugins.console.writeLine(idx.toString());
				_idxTest ++;
			}
		]]>
	</fx:Script>
	<s:Label id="_lblPlayer1" x="50" y="40" color="#ffff00" fontFamily="微软雅黑" fontSize="28"
			 fontWeight="bold" text=" 神仙一枝花"  buttonMode="true"/>
	<s:Label id="_lblVS" x="350" y="40" color="#00ff00" fontFamily="微软雅黑" fontSize="28"
			 fontWeight="bold" text=" VS " />
	<s:Label id="_lblPlayer2" x="550" y="40" color="#ffff00" fontFamily="微软雅黑" fontSize="28"
			 fontWeight="bold" text="万寿落雪"  buttonMode="true"/>
	<s:BorderContainer id="_bcMain" y="100" width="100%" height="400" useHandCursor="false">		
		<s:BorderContainer id="_bcGrid" width="700" height="250" borderColor="#0000ff" borderWeight="0"
						   backgroundAlpha="0" x="30" y="75" visible="false">			
		</s:BorderContainer>
		<s:BorderContainer id="_bcCanvas" width="700" height="250" x="30" y="75" borderVisible="false"
						   backgroundAlpha="0">
			<s:BorderContainer id="_bcLayerEffect" width="100%" height="100%" backgroundAlpha="0" borderVisible="false">
				<s:BorderContainer id="_bcLayerText" width="100%" height="100%" backgroundAlpha="0" borderVisible="false">
					
				</s:BorderContainer>
			</s:BorderContainer>
		</s:BorderContainer>
	</s:BorderContainer>
	<s:Label id="_lblGrid" x="490" y="540" color="#ff8800" fontFamily="华文楷体" fontSize="28"
			 fontWeight="bold" text="显示网格" buttonMode="true" click="_lblGrid_clickHandler(event)"/>
	<s:Label id="_lblPlay" x="620" y="540" color="#ff8800" fontFamily="华文楷体" fontSize="28"
			 fontWeight="bold" text="重新播放" buttonMode="true" click="_lblPlay_clickHandler(event)" />
</s:BorderContainer>
